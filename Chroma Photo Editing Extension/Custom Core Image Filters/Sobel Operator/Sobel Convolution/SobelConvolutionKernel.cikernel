kernel vec4 sobelConvolutionKernel (sampler image) {
    mat3 sobel_x = mat3( -1, -2, -1, 0, 0, 0, 1, 2, 1 );
    mat3 sobel_y = mat3( 1, 0, -1, 2, 0, -2, 1, 0, -1 );
    vec3 s_x = vec3(0.0);
    vec3 s_y = vec3(0.0);
    vec2 dc = destCoord();
    for (int i=-1; i <= 1; i++) {
        for (int j=-1; j <= 1; j++) {
            vec4 currentSample = sample(image, samplerTransform(image, dc + vec2(i,j)));
            s_x += vec3(sobel_x[j+1][i+1] * currentSample.rgb);
            s_y += vec3(sobel_y[j+1][i+1] * currentSample.rgb);
        }
    }

    return vec4(vec3(sqrt(abs(s_x) + abs(s_y))), 1.0);

    /* return vec4(s_x, s_y, 0.0, 1.0); */
}

kernel vec4 chromaUnsharpKernel(sampler u, float inputUnits, float inputNorth, float inputSouth, float inputEast, float inputWest)
{
vec4 pixel = unpremultiply(sample(u, samplerCoord(u)));
vec2 xy = destCoord();

vec4 sum  = vec4(0.0);
for (int i = 0 - int(inputNorth); i <= int(inputSouth); i++)
{
for (int j = 0 - int(inputEast); j <= int(inputWest); j++ )
{
if (inputUnits == 0.0) // sum of values
sum += vec4(unpremultiply(sample(u, samplerTransform(u, vec2(xy + vec2(i, j))))));
else if (inputUnits == 1.0) // sum of distances
sum += vec4(distance(pixel, vec4(unpremultiply(sample(u, samplerTransform(u, vec2(xy + vec2(i, j))))))));
}
}

float divisor = ((inputNorth + inputSouth) + 1.0) * ((inputEast + inputWest) + 1.0);
vec4 mean = vec4(sum / vec4(divisor));



vec4 ratio = mean / pixel;
vec4 exponent = pow(ratio, vec4(2.0));
vec4 new_value = pow(pixel, exponent);

return premultiply(vec4(vec3(new_value.rgb - pixel.rgb), 1.0));
}